<?php 

namespace Neos\Neos\Setup\Infrastructure\Healthcheck;

use Neos\Neos\Domain\Repository\UserRepository;
use Neos\Setup\Domain\Health;
use Neos\Setup\Domain\HealthcheckEnvironment;
use Neos\Setup\Domain\HealthcheckInterface;
use Neos\Setup\Domain\Status;

class UserHealthcheck_Original implements HealthcheckInterface
{
    public function __construct(
        private UserRepository $userRepository
    ) {
    }

    public function getTitle(): string
    {
        return 'Neos user';
    }

    public function execute(HealthcheckEnvironment $environment): Health
    {
        $users = $this->userRepository->findAll();
        if (!$users->count()) {
            return new Health(<<<'MSG'
            There is no Neos user created yet. To create one please run <code>{{flowCommand}} user:create --roles Administrator</code>
            MSG, Status::ERROR());
        }

        return new Health('At least one Neos user exists', Status::OK());
    }
}

#
# Start of Flow generated Proxy code
#

class UserHealthcheck extends UserHealthcheck_Original implements \Neos\Flow\ObjectManagement\Proxy\ProxyInterface {

    use \Neos\Flow\ObjectManagement\Proxy\ObjectSerializationTrait;


    /**
     * Autogenerated Proxy Method
     */
    public function __construct()
    {
        $arguments = func_get_args();

        if (!array_key_exists(0, $arguments)) $arguments[0] = \Neos\Flow\Core\Bootstrap::$staticObjectManager->get('Neos\Neos\Domain\Repository\UserRepository');
        if (!array_key_exists(0, $arguments)) throw new \Neos\Flow\ObjectManagement\Exception\UnresolvedDependenciesException('Missing required constructor argument $userRepository in class ' . __CLASS__ . '. Note that constructor injection is only support for objects of scope singleton (and this is not a singleton) â€“ for other scopes you must pass each required argument to the constructor yourself.', 1296143788);
        parent::__construct(...$arguments);
    }

    /**
     * Autogenerated Proxy Method
     */
    public function __sleep()
    {
            $result = NULL;
        $this->Flow_Object_PropertiesToSerialize = array();
        unset($this->Flow_Persistence_RelatedEntities);

        $transientProperties = array (
);
        $propertyVarTags = array (
);
        $result = $this->Flow_serializeRelatedEntities($transientProperties, $propertyVarTags);
        return $result;
    }

    /**
     * Autogenerated Proxy Method
     */
    public function __wakeup()
    {

        $this->Flow_setRelatedEntities();
    }
}
# PathAndFilename: /var/www/neos/Packages/Application/Neos.Neos.Setup/Classes/Infrastructure/Healthcheck/UserHealthcheck.php
#