<?php 
namespace Neos\Neos\Fusion\Helper;

/*
 * This file is part of the Neos.Neos package.
 *
 * (c) Contributors of the Neos Project - www.neos.io
 *
 * This package is Open Source Software. For the full copyright and license
 * information, please view the LICENSE file which was distributed with this
 * source code.
 */

use Neos\Eel\ProtectedContextAwareInterface;
use Neos\Flow\Annotations as Flow;
use Neos\Neos\Service\UserService;

/**
 * BackendUser helper for translations in the backend
 */
class BackendHelper_Original implements ProtectedContextAwareInterface
{
    #[Flow\Inject(lazy: false)]
    protected UserService $userService;

    /**
     * The interface language the user selected or the default language defined in the settings
     * Formatted as {@see \Neos\Flow\I18n\Locale} identifier, eg "de", "en", ...
     *
     * Example::
     *
     *     Translation.id("mh").locale(Neos.Backend.interfaceLanguage()).translate()
     *
     * @return string
     */
    public function interfaceLanguage(): string
    {
        $currentUser = $this->userService->getBackendUser();
        assert($currentUser !== null, "No backend user");
        return $this->userService->getInterfaceLanguage();
    }

    public function allowsCallOfMethod($methodName)
    {
        return true;
    }
}

#
# Start of Flow generated Proxy code
#
/**
 * BackendUser helper for translations in the backend
 * @codeCoverageIgnore
 */
class BackendHelper extends BackendHelper_Original implements \Neos\Flow\ObjectManagement\Proxy\ProxyInterface {

    use \Neos\Flow\ObjectManagement\Proxy\ObjectSerializationTrait, \Neos\Flow\ObjectManagement\DependencyInjection\PropertyInjectionTrait;


    /**
     * Autogenerated Proxy Method
     */
    public function __construct()
    {
        if ('Neos\Neos\Fusion\Helper\BackendHelper' === get_class($this)) {
            $this->Flow_Proxy_injectProperties();
        }
    }

    /**
     * Autogenerated Proxy Method
     */
    public function __sleep()
    {
            $result = NULL;
        $this->Flow_Object_PropertiesToSerialize = array();
        unset($this->Flow_Persistence_RelatedEntities);

        $transientProperties = array (
);
        $propertyVarTags = array (
);
        $result = $this->Flow_serializeRelatedEntities($transientProperties, $propertyVarTags);
        return $result;
    }

    /**
     * Autogenerated Proxy Method
     */
    public function __wakeup()
    {

        $this->Flow_setRelatedEntities();
        $this->Flow_Proxy_injectProperties();
    }

    /**
     * Autogenerated Proxy Method
     */
    private function Flow_Proxy_injectProperties()
    {
        $this->userService = \Neos\Flow\Core\Bootstrap::$staticObjectManager->get('Neos\Neos\Service\UserService');
        $this->Flow_Injected_Properties = array (
  0 => 'userService',
);
    }
}
# PathAndFilename: /var/www/neos/Packages/Application/Neos.Neos/Classes/Fusion/Helper/BackendHelper.php
#