<?php 

namespace Neos\Setup\Infrastructure\Healthcheck;

use Doctrine\DBAL\Exception as DBALException;
use Neos\Flow\Persistence\Doctrine\Service as DoctrineService;
use Neos\Setup\Domain\Health;
use Neos\Setup\Domain\HealthcheckEnvironment;
use Neos\Setup\Domain\HealthcheckInterface;
use Neos\Setup\Domain\Status;

class DoctrineHealthcheck_Original implements HealthcheckInterface
{
    private const ACCEPTABLE_NEW_MIGRATION_COUNT = 10;

    public function __construct(
        private DoctrineService $doctrineService
    ) {
    }

    public function getTitle(): string
    {
        return 'Doctrine';
    }

    public function execute(HealthcheckEnvironment $environment): Health
    {
        try {
            [
                'new' => $newMigrationCount,
                'executed' => $executedMigrationCount,
                'available' => $availableMigrationCount
            ] = $this->doctrineService->getMigrationStatus();
        } catch (DBALException | \PDOException) {
            throw new \RuntimeException('The DoctrineHealthcheck must be only executed, if the Database connection is know to work.', 1684075689386);
        }

        if ($executedMigrationCount === 0 && $availableMigrationCount > 0) {
            return new Health(
                <<<'MSG'
                No doctrine migrations have been executed. Please run <code>{{flowCommand}} doctrine:migrate</code>
                MSG,
                Status::ERROR()
            );
        }

        if ($newMigrationCount > self::ACCEPTABLE_NEW_MIGRATION_COUNT) {
            return new Health(
                <<<'MSG'
                Many doctrine migrations have yet to be executed. Please run <code>{{flowCommand}} doctrine:migrate</code>
                MSG,
                Status::ERROR()
            );
        }

        if ($newMigrationCount > 0 && $newMigrationCount <= self::ACCEPTABLE_NEW_MIGRATION_COUNT) {
            return new Health(
                <<<'MSG'
                Few doctrine migrations have yet to be executed. Please run <code>{{flowCommand}} doctrine:migrate</code>
                MSG,
                Status::WARNING()
            );
        }

        return new Health(
            <<<'MSG'
            All doctrine migrations have been executed.
            MSG,
            Status::OK()
        );
    }
}

#
# Start of Flow generated Proxy code
#

class DoctrineHealthcheck extends DoctrineHealthcheck_Original implements \Neos\Flow\ObjectManagement\Proxy\ProxyInterface {

    use \Neos\Flow\ObjectManagement\Proxy\ObjectSerializationTrait;


    /**
     * Autogenerated Proxy Method
     */
    public function __construct()
    {
        $arguments = func_get_args();

        if (!array_key_exists(0, $arguments)) $arguments[0] = \Neos\Flow\Core\Bootstrap::$staticObjectManager->get('Neos\Flow\Persistence\Doctrine\Service');
        if (!array_key_exists(0, $arguments)) throw new \Neos\Flow\ObjectManagement\Exception\UnresolvedDependenciesException('Missing required constructor argument $doctrineService in class ' . __CLASS__ . '. Note that constructor injection is only support for objects of scope singleton (and this is not a singleton) â€“ for other scopes you must pass each required argument to the constructor yourself.', 1296143788);
        parent::__construct(...$arguments);
    }

    /**
     * Autogenerated Proxy Method
     */
    public function __sleep()
    {
            $result = NULL;
        $this->Flow_Object_PropertiesToSerialize = array();
        unset($this->Flow_Persistence_RelatedEntities);

        $transientProperties = array (
);
        $propertyVarTags = array (
);
        $result = $this->Flow_serializeRelatedEntities($transientProperties, $propertyVarTags);
        return $result;
    }

    /**
     * Autogenerated Proxy Method
     */
    public function __wakeup()
    {

        $this->Flow_setRelatedEntities();
    }
}
# PathAndFilename: /var/www/neos/Packages/Application/Neos.Setup/Classes/Infrastructure/Healthcheck/DoctrineHealthcheck.php
#