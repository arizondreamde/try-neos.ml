<?php 
namespace Neos\Fusion\Core;

/*
 * This file is part of the Neos.Fusion package.
 *
 * (c) Contributors of the Neos Project - www.neos.io
 *
 * This package is Open Source Software. For the full copyright and license
 * information, please view the LICENSE file which was distributed with this
 * source code.
 */

use GuzzleHttp\Psr7\ServerRequest;
use Neos\Flow\Annotations as Flow;
use Neos\Flow\Mvc\ActionRequest;
use Neos\Flow\Mvc\ActionResponse;
use Neos\Flow\Mvc\Controller\Arguments;
use Neos\Flow\Mvc\Controller\ControllerContext;
use Neos\Flow\Mvc\Routing\UriBuilder;

/**
 * @Flow\Scope("singleton")
 * @api
 */
class RuntimeFactory_Original
{
    /**
     * @var Parser
     * @Flow\Inject
     */
    protected $fusionParser;

    /**
     * @param array<int|string, mixed> $fusionConfiguration
     * @deprecated with Neos 8.3 might be removed with Neos 9.0 use {@link createFromConfiguration} instead.
     */
    public function create(array $fusionConfiguration, ControllerContext $controllerContext = null): Runtime
    {
        if ($controllerContext === null) {
            $controllerContext = self::createControllerContextFromEnvironment();
        }
        return new Runtime(
            FusionConfiguration::fromArray($fusionConfiguration),
            $controllerContext
        );
    }

    public function createFromConfiguration(FusionConfiguration $fusionConfiguration, ControllerContext $controllerContext): Runtime
    {
        return new Runtime($fusionConfiguration, $controllerContext);
    }

    public function createFromSourceCode(
        FusionSourceCodeCollection $sourceCode,
        ControllerContext $controllerContext
    ): Runtime {
        return new Runtime(
            $this->fusionParser->parseFromSource($sourceCode),
            $controllerContext
        );
    }

    private static function createControllerContextFromEnvironment(): ControllerContext
    {
        $httpRequest = ServerRequest::fromGlobals();

        $request = ActionRequest::fromHttpRequest($httpRequest);

        $uriBuilder = new UriBuilder();
        $uriBuilder->setRequest($request);

        return new ControllerContext(
            $request,
            new ActionResponse(),
            new Arguments([]),
            $uriBuilder
        );
    }
}

#
# Start of Flow generated Proxy code
#
/**
 * @Flow\Scope("singleton")
 * @api
 * @codeCoverageIgnore
 */
class RuntimeFactory extends RuntimeFactory_Original implements \Neos\Flow\ObjectManagement\Proxy\ProxyInterface {

    use \Neos\Flow\ObjectManagement\Proxy\ObjectSerializationTrait, \Neos\Flow\ObjectManagement\DependencyInjection\PropertyInjectionTrait;


    /**
     * Autogenerated Proxy Method
     */
    public function __construct()
    {
        if (get_class($this) === 'Neos\Fusion\Core\RuntimeFactory') \Neos\Flow\Core\Bootstrap::$staticObjectManager->setInstance('Neos\Fusion\Core\RuntimeFactory', $this);
        if ('Neos\Fusion\Core\RuntimeFactory' === get_class($this)) {
            $this->Flow_Proxy_injectProperties();
        }
    }

    /**
     * Autogenerated Proxy Method
     */
    public function __sleep()
    {
            $result = NULL;
        $this->Flow_Object_PropertiesToSerialize = array();
        unset($this->Flow_Persistence_RelatedEntities);

        $transientProperties = array (
);
        $propertyVarTags = array (
  'fusionParser' => 'Neos\\Fusion\\Core\\Parser',
);
        $result = $this->Flow_serializeRelatedEntities($transientProperties, $propertyVarTags);
        return $result;
    }

    /**
     * Autogenerated Proxy Method
     */
    public function __wakeup()
    {
        if (get_class($this) === 'Neos\Fusion\Core\RuntimeFactory') \Neos\Flow\Core\Bootstrap::$staticObjectManager->setInstance('Neos\Fusion\Core\RuntimeFactory', $this);

        $this->Flow_setRelatedEntities();
        $this->Flow_Proxy_injectProperties();
    }

    /**
     * Autogenerated Proxy Method
     */
    private function Flow_Proxy_injectProperties()
    {
        $this->fusionParser = new \Neos\Fusion\Core\Parser();
        $this->Flow_Injected_Properties = array (
  0 => 'fusionParser',
);
    }
}
# PathAndFilename: /var/www/neos/Packages/Application/Neos.Fusion/Classes/Core/RuntimeFactory.php
#