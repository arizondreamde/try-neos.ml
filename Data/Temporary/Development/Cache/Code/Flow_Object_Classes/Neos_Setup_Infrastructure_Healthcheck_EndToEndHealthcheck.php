<?php 

namespace Neos\Setup\Infrastructure\Healthcheck;

use Neos\Setup\Domain\Health;
use Neos\Setup\Domain\HealthcheckEnvironment;
use Neos\Setup\Domain\HealthcheckInterface;
use Neos\Setup\Domain\Status;

class EndToEndHealthcheck_Original implements HealthcheckInterface
{
    public function getTitle(): string
    {
        return 'End to end';
    }

    public function execute(HealthcheckEnvironment $environment): Health
    {
        return new Health('Flow is up and running', Status::OK());
    }
}

#
# Start of Flow generated Proxy code
#

class EndToEndHealthcheck extends EndToEndHealthcheck_Original implements \Neos\Flow\ObjectManagement\Proxy\ProxyInterface {

    use \Neos\Flow\ObjectManagement\Proxy\ObjectSerializationTrait;


    /**
     * Autogenerated Proxy Method
     */
    public function __sleep()
    {
            $result = NULL;
        $this->Flow_Object_PropertiesToSerialize = array();
        unset($this->Flow_Persistence_RelatedEntities);

        $transientProperties = array (
);
        $propertyVarTags = array (
);
        $result = $this->Flow_serializeRelatedEntities($transientProperties, $propertyVarTags);
        return $result;
    }

    /**
     * Autogenerated Proxy Method
     */
    public function __wakeup()
    {

        $this->Flow_setRelatedEntities();
    }
}
# PathAndFilename: /var/www/neos/Packages/Application/Neos.Setup/Classes/Infrastructure/Healthcheck/EndToEndHealthcheck.php
#